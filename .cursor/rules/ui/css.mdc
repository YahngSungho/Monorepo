---
description:
globs: *.css,*.svelte,
alwaysApply: false
---

<Predifined-CSS-variables>
```css
:root {
	--layer-1: 1;
	--layer-2: 2;
	--layer-3: 3;
	--layer-4: 4;
	--layer-5: 5;
	--layer-important: 2147483647;
	--ratio-square: 1;
	--ratio-landscape: 4/3;
	--ratio-portrait: 3/4;
	--ratio-widescreen: 16/9;
	--ratio-ultrawide: 18/5;
	--ratio-golden: 1.618/1;
	--border-size-1: 1px;
	--border-size-2: 2px;
	--border-size-3: 5px;
	--border-size-4: 10px;
	--border-size-5: 25px;
	--radius-1: 2px;
	--radius-2: 5px;
	--radius-2-5: 0.5rem;
	--radius-3: 1rem;
	--radius-4: 2rem;
	--radius-5: 4rem;
	--radius-6: 8rem;
	--radius-conditional-1: clamp(0px, calc(100vi - 100%) * 1e5, var(--radius-1));
	--radius-conditional-2: clamp(0px, calc(100vi - 100%) * 1e5, var(--radius-2));
	--radius-conditional-3: clamp(0px, calc(100vi - 100%) * 1e5, var(--radius-3));
	--radius-conditional-4: clamp(0px, calc(100vi - 100%) * 1e5, var(--radius-4));
	--radius-conditional-5: clamp(0px, calc(100vi - 100%) * 1e5, var(--radius-5));
	--radius-conditional-6: clamp(0px, calc(100vi - 100%) * 1e5, var(--radius-6));
}
:root {
	--size-content-1: 20ch;
	--size-content-2: 45ch;
	--size-content-3: 60ch;
	--size-content-4: 90ch;
	--size-header-1: 20ch;
	--size-header-2: 25ch;
	--size-header-3: 35ch;
	--size-relative-000: -0.5ch;
	--size-relative-00: -0.25ch;
	--size-relative-1: 0.25ch;
	--size-relative-2: 0.5ch;
	--size-relative-3: 1ch;
	--size-relative-4: 1.25ch;
	--size-relative-5: 1.5ch;
	--size-relative-6: 1.75ch;
	--size-relative-7: 2ch;
	--size-relative-8: 3ch;
	--size-relative-9: 4ch;
	--size-relative-10: 5ch;
	--size-relative-11: 7.5ch;
	--size-relative-12: 10ch;
	--size-relative-13: 15ch;
	--size-relative-14: 20ch;
	--size-relative-15: 30ch;
}
:root {
	/* space-em-cqi 2xs: 9px → 10px */
	--space-em-cqi-2xs: clamp(0.5625em, 0.5408em + 0.1087cqi, 0.625em);
	/* space-em-cqi xs: 14px → 15px */
	--space-em-cqi-xs: clamp(0.875em, 0.8533em + 0.1087cqi, 0.9375em);
	/* space-em-cqi s: 18px → 20px */
	--space-em-cqi-s: clamp(1.125em, 1.0815em + 0.2174cqi, 1.25em);
	/* space-em-cqi m: 27px → 30px */
	--space-em-cqi-m: clamp(1.6875em, 1.6223em + 0.3261cqi, 1.875em);
	/* space-em-cqi l: 36px → 40px */
	--space-em-cqi-l: clamp(2.25em, 2.163em + 0.4348cqi, 2.5em);
	/* space-em-cqi xl: 54px → 60px */
	--space-em-cqi-xl: clamp(3.375em, 3.2446em + 0.6522cqi, 3.75em);
	/* space-em-cqi 2xl: 72px → 80px */
	--space-em-cqi-2xl: clamp(4.5em, 4.3261em + 0.8696cqi, 5em);
	/* space-em-cqi 3xl: 108px → 120px */
	--space-em-cqi-3xl: clamp(6.75em, 6.4891em + 1.3043cqi, 7.5em);
	/* One-up pairs */
	/* space-em-cqi 3xs-2xs: 5px → 10px */
	--space-em-cqi-3xs-2xs: clamp(0.3125em, 0.2038em + 0.5435cqi, 0.625em);
	/* space-em-cqi 2xs-xs: 9px → 15px */
	--space-em-cqi-2xs-xs: clamp(0.5625em, 0.4321em + 0.6522cqi, 0.9375em);
	/* space-em-cqi xs-s: 14px → 20px */
	--space-em-cqi-xs-s: clamp(0.875em, 0.7446em + 0.6522cqi, 1.25em);
	/* space-em-cqi s-m: 18px → 30px */
	--space-em-cqi-s-m: clamp(1.125em, 0.8641em + 1.3043cqi, 1.875em);
	/* space-em-cqi m-l: 27px → 40px */
	--space-em-cqi-m-l: clamp(1.6875em, 1.4049em + 1.413cqi, 2.5em);
	/* space-em-cqi l-xl: 36px → 60px */
	--space-em-cqi-l-xl: clamp(2.25em, 1.7283em + 2.6087cqi, 3.75em);
	/* space-em-cqi xl-2xl: 54px → 80px */
	--space-em-cqi-xl-2xl: clamp(3.375em, 2.8098em + 2.8261cqi, 5em);
	/* space-em-cqi 2xl-3xl: 72px → 120px */
	--space-em-cqi-2xl-3xl: clamp(4.5em, 3.4565em + 5.2174cqi, 7.5em);
	/* Custom pairs */
	/* space-em-cqi s-l: 18px → 40px */
	--space-em-cqi-s-l: clamp(1.125em, 0.6467em + 2.3913cqi, 2.5em);
}
:root {
	/* Step -2: 9.7222px → 10.24px */
	--font-size-fluid-em-cqi-02: clamp(0.6076em, 0.5964em + 0.0563cqi, 0.64em);
	/* Step -1: 11.6667px → 12.8px */
	--font-size-fluid-em-cqi-01: clamp(0.7292em, 0.7045em + 0.1232cqi, 0.8em);
	/* Step 0: 14px → 16px */
	--font-size-fluid-em-cqi-0: clamp(0.875em, 0.8315em + 0.2174cqi, 1em);
	/* Step 0.33: 14.93px → 17.33px */
	--font-size-fluid-em-cqi-0p3: clamp(1em, 0.8811em + 0.2609cqi, 1.0833em);
	/* Step 0.66: 15.87px → 18.67px */
	--font-size-fluid-em-cqi-0p6: clamp(1em, 0.9308em + 0.3043cqi, 1.1667em);
	/* Step 1: 16.8px → 20px */
	--font-size-fluid-em-cqi-1: clamp(1.05em, 0.9804em + 0.3478cqi, 1.25em);
	/* Step 2: 20.16px → 25px */
	--font-size-fluid-em-cqi-2: clamp(1.26em, 1.1548em + 0.5261cqi, 1.5625em);
	/* Step 3: 24.192px → 31.25px */
	--font-size-fluid-em-cqi-3: clamp(1.512em, 1.3586em + 0.7672cqi, 1.9531em);
	/* Step 4: 29.0304px → 39.0625px */
	--font-size-fluid-em-cqi-4: clamp(1.8144em, 1.5963em + 1.0904cqi, 2.4414em);
	/* Step 5: 34.8365px → 48.8281px */
	--font-size-fluid-em-cqi-5: clamp(2.1773em, 1.8731em + 1.5208cqi, 3.0518em);
}
:root {
	--radius-selector: var(--radius-1);
	--radius-field: var(--radius-1);
	--radius-box: var(--radius-1);
	--size-selector: var(--size-1);
	--size-field: var(--size-1);
}
:root {
	--background: var(--gray-0);
	--foreground: var(--gray-12);
	--muted: var(--gray-3);
	--muted-foreground: var(--gray-6);
	--popover: var(--background);
	--popover-foreground: var(--foreground);
	--card: var(--background);
	--card-foreground: var(--foreground);
	--border: var(--gray-4);
	--input: var(--gray-4);
	--primary: var(--gray-11);
	--primary-foreground: var(--gray-1);
	--secondary: var(--gray-3);
	--secondary-foreground: var(--gray-11);
	--accent: var(--gray-3);
	--accent-foreground: var(--gray-11);
	--destructive: var(--red-6);
	--destructive-foreground: var(--foreground);
	--ring: var(--gray-5);
	--sidebar: var(--gray-1);
	--sidebar-foreground: var(--foreground);
	--sidebar-primary: var(--primary);
	--sidebar-primary-foreground: var(--primary-foreground);
	--sidebar-accent: var(--accent);
	--sidebar-accent-foreground: var(--accent-foreground);
	--sidebar-border: var(--border);
	--sidebar-ring: var(--ring);
	--chart-1: var(--pink-8);
	--chart-2: var(--teal-8);
	--chart-3: var(--yellow-8);
	--chart-4: var(--orange-8);
	--chart-5: var(--blue-8);
}
```

More pre-defined CSS variables:
[openProps.md](mdc:.cursor/docs/openProps.md)
[baseVariables.css](mdc:libraries/base/src/baseVariables.css)
</Predifined-CSS-variables>

</Predifined-CSS-variables>

# CSS Styling Guide

This document outlines the rules and best practices for styling components in this codebase.

## General Styling Rule

- **For any new styles, do not use TailwindCSS utility classes.**
- Instead, prefer using **standard CSS syntax** with our **predefined CSS variables**.

---

## Styling Methods in `.svelte` Files

Here are the approved methods for styling in `.svelte` files, listed in order of preference.

### 1. `style` Attribute (Default)

This is the default and preferred method for applying styles.

- **When to Use**:
  - Use this for all basic styling needs.
- **Example**:

  ```svelte
  <script>
    let myColor = 'blue';
  </script>
  
  <div style="margin: var(--space-em-cqi-m); color: {myColor};">...</div>
  ```

- **Key Features**:
  - You can directly embed JavaScript variables inside the style string using `{...}`. No backticks are needed.
- **Limitations**:
  - It does not support reactive state changes within the style definition.
  - The ampersand (`&`) for nesting selectors is not available. For nested styles, use Emotion.js.

### 2. Emotion.js

Use Emotion for more complex CSS scenarios that the `style` attribute cannot handle.

- **When to Use**:
  - When you need to use nested selectors like `&:focus`, `&:hover`, or `& > *`.
  - When you need to assign class names dynamically or based on component state.
- **Example**:

  ```svelte
  <script>
    import { css, cx } from '@emotion/css';
  
  </script>
  
  <div class={cx('base-class', css`
      &:hover {
        background-color: var(--primary);
      }`
  			)}>...</div>
  ```

### 3. TailwindCSS

The use of TailwindCSS is restricted to specific legacy cases.

- **When to Use**:
  - Only when integrating or maintaining third-party components (e.g., from ShadCN, DaisyUI) that already use TailwindCSS.
- **Important**:
  - **Do not write new styles using TailwindCSS classes.** All new styling should be done using the `style` attribute or Emotion.js.
