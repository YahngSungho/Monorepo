---
description:
globs: *.css,*.svelte,
alwaysApply: false
---

<Predifined-CSS-variables>
```css
:root {
	/* space based with em & cqi */
	--space-em-cqi-2xs: clamp(0.5625em, 0.5408em + 0.1087cqi, 0.625em);
	--space-em-cqi-xs: clamp(0.875em, 0.8533em + 0.1087cqi, 0.9375em);
	--space-em-cqi-s: clamp(1.125em, 1.0815em + 0.2174cqi, 1.25em);
	--space-em-cqi-m: clamp(1.6875em, 1.6223em + 0.3261cqi, 1.875em);
	--space-em-cqi-l: clamp(2.25em, 2.163em + 0.4348cqi, 2.5em);
	--space-em-cqi-xl: clamp(3.375em, 3.2446em + 0.6522cqi, 3.75em);
	--space-em-cqi-2xl: clamp(4.5em, 4.3261em + 0.8696cqi, 5em);
	--space-em-cqi-3xl: clamp(6.75em, 6.4891em + 1.3043cqi, 7.5em);
	--space-em-cqi-3xs-2xs: clamp(0.3125em, 0.2038em + 0.5435cqi, 0.625em);
	--space-em-cqi-2xs-xs: clamp(0.5625em, 0.4321em + 0.6522cqi, 0.9375em);
	--space-em-cqi-xs-s: clamp(0.875em, 0.7446em + 0.6522cqi, 1.25em);
	--space-em-cqi-s-m: clamp(1.125em, 0.8641em + 1.3043cqi, 1.875em);
	--space-em-cqi-m-l: clamp(1.6875em, 1.4049em + 1.413cqi, 2.5em);
	--space-em-cqi-l-xl: clamp(2.25em, 1.7283em + 2.6087cqi, 3.75em);
	--space-em-cqi-xl-2xl: clamp(3.375em, 2.8098em + 2.8261cqi, 5em);
	--space-em-cqi-2xl-3xl: clamp(4.5em, 3.4565em + 5.2174cqi, 7.5em);
	--space-em-cqi-s-l: clamp(1.125em, 0.6467em + 2.3913cqi, 2.5em);
	/* space based with rem & cqi */
	--space-cqi-2xs: clamp(0.5625rem, 0.5408rem + 0.1087cqi, 0.625rem);
	--space-cqi-xs: clamp(0.875rem, 0.8533rem + 0.1087cqi, 0.9375rem);
	--space-cqi-s: clamp(1.125rem, 1.0815rem + 0.2174cqi, 1.25rem);
	--space-cqi-m: clamp(1.6875rem, 1.6223rem + 0.3261cqi, 1.875rem);
	--space-cqi-l: clamp(2.25rem, 2.163rem + 0.4348cqi, 2.5rem);
	--space-cqi-xl: clamp(3.375rem, 3.2446rem + 0.6522cqi, 3.75rem);
	--space-cqi-2xl: clamp(4.5rem, 4.3261rem + 0.8696cqi, 5rem);
	--space-cqi-3xl: clamp(6.75rem, 6.4891rem + 1.3043cqi, 7.5rem);
	--space-cqi-3xs-2xs: clamp(0.3125rem, 0.2038rem + 0.5435cqi, 0.625rem);
	--space-cqi-2xs-xs: clamp(0.5625rem, 0.4321rem + 0.6522cqi, 0.9375rem);
	--space-cqi-xs-s: clamp(0.875rem, 0.7446rem + 0.6522cqi, 1.25rem);
	--space-cqi-s-m: clamp(1.125rem, 0.8641rem + 1.3043cqi, 1.875rem);
	--space-cqi-m-l: clamp(1.6875rem, 1.4049rem + 1.413cqi, 2.5rem);
	--space-cqi-l-xl: clamp(2.25rem, 1.7283rem + 2.6087cqi, 3.75rem);
	--space-cqi-xl-2xl: clamp(3.375rem, 2.8098rem + 2.8261cqi, 5rem);
	--space-cqi-2xl-3xl: clamp(4.5rem, 3.4565rem + 5.2174cqi, 7.5rem);
	--space-cqi-s-l: clamp(1.125rem, 0.6467rem + 2.3913cqi, 2.5rem);
	/* space based with rem & vi  */
	--space-2xs: clamp(0.5625rem, 0.5408rem + 0.1087vi, 0.625rem);
	--space-xs: clamp(0.875rem, 0.8533rem + 0.1087vi, 0.9375rem);
	--space-s: clamp(1.125rem, 1.0815rem + 0.2174vi, 1.25rem);
	--space-m: clamp(1.6875rem, 1.6223rem + 0.3261vi, 1.875rem);
	--space-l: clamp(2.25rem, 2.163rem + 0.4348vi, 2.5rem);
	--space-xl: clamp(3.375rem, 3.2446rem + 0.6522vi, 3.75rem);
	--space-2xl: clamp(4.5rem, 4.3261rem + 0.8696vi, 5rem);
	--space-3xl: clamp(6.75rem, 6.4891rem + 1.3043vi, 7.5rem);
	--space-3xs-2xs: clamp(0.3125rem, 0.2038rem + 0.5435vi, 0.625rem);
	--space-2xs-xs: clamp(0.5625rem, 0.4321rem + 0.6522vi, 0.9375rem);
	--space-xs-s: clamp(0.875rem, 0.7446rem + 0.6522vi, 1.25rem);
	--space-s-m: clamp(1.125rem, 0.8641rem + 1.3043vi, 1.875rem);
	--space-m-l: clamp(1.6875rem, 1.4049rem + 1.413vi, 2.5rem);
	--space-l-xl: clamp(2.25rem, 1.7283rem + 2.6087vi, 3.75rem);
	--space-xl-2xl: clamp(3.375rem, 2.8098rem + 2.8261vi, 5rem);
	--space-2xl-3xl: clamp(4.5rem, 3.4565rem + 5.2174vi, 7.5rem);
	--space-s-l: clamp(1.125rem, 0.6467rem + 2.3913vi, 2.5rem);
}
:root {
	--layer-1: 1;
	--layer-2: 2;
	--layer-3: 3;
	--layer-4: 4;
	--layer-5: 5;
	--layer-important: 2147483647;
	--ratio-square: 1;
	--ratio-landscape: 4/3;
	--ratio-portrait: 3/4;
	--ratio-widescreen: 16/9;
	--ratio-ultrawide: 18/5;
	--ratio-golden: 1.618/1;
	--border-size-1: 1px;
	--border-size-2: 2px;
	--border-size-3: 5px;
	--border-size-4: 10px;
	--border-size-5: 25px;
	--radius-1: 2px;
	--radius-2: 5px;
	--radius-2-5: 0.5rem;
	--radius-3: 1rem;
	--radius-4: 2rem;
	--radius-5: 4rem;
	--radius-6: 8rem;
	--radius-conditional-1: clamp(0px, calc(100vi - 100%) * 1e5, var(--radius-1));
	--radius-conditional-2: clamp(0px, calc(100vi - 100%) * 1e5, var(--radius-2));
	--radius-conditional-3: clamp(0px, calc(100vi - 100%) * 1e5, var(--radius-3));
	--radius-conditional-4: clamp(0px, calc(100vi - 100%) * 1e5, var(--radius-4));
	--radius-conditional-5: clamp(0px, calc(100vi - 100%) * 1e5, var(--radius-5));
	--radius-conditional-6: clamp(0px, calc(100vi - 100%) * 1e5, var(--radius-6));
	--radius-selector: var(--radius-1);
	--radius-field: var(--radius-1);
	--radius-box: var(--radius-1);
	--size-selector: var(--size-1);
	--size-field: var(--size-1);
	--background: var(--gray-0);
	--foreground: var(--gray-12);
	--muted: var(--gray-3);
	--muted-foreground: var(--gray-6);
	--popover: var(--background);
	--popover-foreground: var(--foreground);
	--card: var(--background);
	--card-foreground: var(--foreground);
	--border: var(--gray-4);
	--input: var(--gray-4);
	--primary: var(--gray-11);
	--primary-foreground: var(--gray-1);
	--secondary: var(--gray-3);
	--secondary-foreground: var(--gray-11);
	--accent: var(--gray-3);
	--accent-foreground: var(--gray-11);
	--destructive: var(--red-6);
	--destructive-foreground: var(--foreground);
	--ring: var(--gray-5);
	--sidebar: var(--gray-1);
	--sidebar-foreground: var(--foreground);
	--sidebar-primary: var(--primary);
	--sidebar-primary-foreground: var(--primary-foreground);
	--sidebar-accent: var(--accent);
	--sidebar-accent-foreground: var(--accent-foreground);
	--sidebar-border: var(--border);
	--sidebar-ring: var(--ring);
	--chart-1: var(--pink-8);
	--chart-2: var(--teal-8);
	--chart-3: var(--yellow-8);
	--chart-4: var(--orange-8);
	--chart-5: var(--blue-8);
}
```

More pre-defined CSS variables:
[openProps.md](mdc:.cursor/docs/openProps.md)
</Predifined-CSS-variables>

# CSS Styling Guide

This document outlines the rules and best practices for styling components in this codebase.

## General Styling Rule

- **For any new styles, do not use TailwindCSS utility classes.**
- Instead, prefer using **standard CSS syntax** with our **predefined CSS variables**.

---

## Styling Methods in `.svelte` Files

Here are the approved methods for styling in `.svelte` files, listed in order of preference.

### 1. Svelte Native Way (`style` Attribute, `<style>` tag, `style`/`class` modifier)

This is the default and preferred method for applying styles. You should use raw CSS Sytanx with CSS variables directly in them. You can use custom CSS Classes (not from Tailwind).

- **When to Use**:
  - Use this for all basic styling needs.

### 2. Emotion.js

- **When to Use**:
  - Use Emotion for passing CSS Classes
- **Example**:

  ```svelte
  <script>
    import { css, cx } from '@emotion/css';
  
  </script>
  
  <SomeComponent class={cx('base-class', css`
      &:hover {
        background-color: var(--primary);
      }`
  			)} />
  ```

### 3. TailwindCSS

The use of TailwindCSS is restricted to specific legacy cases.

- **When to Use**:
  - Only when integrating or maintaining third-party components (e.g., from ShadCN, DaisyUI) that already use TailwindCSS.
- **Important**:
  - **Do not write new styles using TailwindCSS classes.** All new styling should be done using raw CSS syntax directly with CSS variables, or custom Classes.
