diff --git a/apps/boiler_plates/.svelte-kit/ambient.d.ts b/apps/boiler_plates/.svelte-kit/ambient.d.ts
index 9dbcf8a..3936da3 100644
--- a/apps/boiler_plates/.svelte-kit/ambient.d.ts
+++ b/apps/boiler_plates/.svelte-kit/ambient.d.ts
@@ -1,179 +1,197 @@
-
 // this file is generated â€” do not edit it
 
-
 /// <reference types="@sveltejs/kit" />
 
 /**
- * Environment variables [loaded by Vite](https://vitejs.dev/guide/env-and-mode.html#env-files) from `.env` files and `process.env`. Like [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), this module cannot be imported into client-side code. This module only includes variables that _do not_ begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) _and do_ start with [`config.kit.env.privatePrefix`](https://svelte.dev/docs/kit/configuration#env) (if configured).
- * 
- * _Unlike_ [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), the values exported from this module are statically injected into your bundle at build time, enabling optimisations like dead code elimination.
- * 
+ * Environment variables [loaded by Vite](https://vitejs.dev/guide/env-and-mode.html#env-files) from
+ * `.env` files and `process.env`. Like
+ * [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), this module cannot be
+ * imported into client-side code. This module only includes variables that _do not_ begin with
+ * [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) _and do_ start
+ * with [`config.kit.env.privatePrefix`](https://svelte.dev/docs/kit/configuration#env) (if
+ * configured).
+ *
+ * _Unlike_ [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), the values
+ * exported from this module are statically injected into your bundle at build time, enabling
+ * optimisations like dead code elimination.
+ *
  * ```ts
- * import { API_KEY } from '$env/static/private';
- * ```
- * 
- * Note that all environment variables referenced in your code should be declared (for example in an `.env` file), even if they don't have a value until the app is deployed:
- * 
+ * import { API_KEY } from '$env/static/private'
  * ```
- * MY_FEATURE_FLAG=""
- * ```
- * 
+ *
+ * Note that all environment variables referenced in your code should be declared (for example in an
+ * `.env` file), even if they don't have a value until the app is deployed:
+ *
+ *     MY_FEATURE_FLAG = ''
+ *
  * You can override `.env` values from the command line like so:
- * 
+ *
  * ```bash
  * MY_FEATURE_FLAG="enabled" npm run dev
  * ```
  */
 declare module '$env/static/private' {
-	export const APPDATA: string;
-	export const BASE_URL: string;
-	export const COLORTERM: string;
-	export const COMSPEC: string;
-	export const DEV: string;
-	export const DISPLAY: string;
-	export const HOME: string;
-	export const INIT_CWD: string;
-	export const LANG: string;
-	export const MODE: string;
-	export const NODE: string;
-	export const NODE_ENV: string;
-	export const NODE_OPTIONS: string;
-	export const NODE_PATH: string;
-	export const npm_command: string;
-	export const npm_config_engine_strict: string;
-	export const npm_config_frozen_lockfile: string;
-	export const npm_config_msvs_version: string;
-	export const npm_config_node_gyp: string;
-	export const npm_config_registry: string;
-	export const npm_config_user_agent: string;
-	export const npm_config_verify_deps_before_run: string;
-	export const npm_execpath: string;
-	export const npm_lifecycle_event: string;
-	export const npm_lifecycle_script: string;
-	export const npm_node_execpath: string;
-	export const npm_package_name: string;
-	export const npm_package_version: string;
-	export const PATH: string;
-	export const PATHEXT: string;
-	export const PNPM_SCRIPT_SRC_DIR: string;
-	export const PROD: string;
-	export const ProgramData: string;
-	export const PROMPT: string;
-	export const PWD: string;
-	export const SHELL: string;
-	export const SYSTEMDRIVE: string;
-	export const SYSTEMROOT: string;
-	export const TEMP: string;
-	export const TERM: string;
-	export const TERM_PROGRAM: string;
-	export const TEST: string;
-	export const TMP: string;
-	export const TURBO_HASH: string;
-	export const VITEST: string;
-	export const VSCODE_GIT_ASKPASS_EXTRA_ARGS: string;
-	export const VSCODE_GIT_ASKPASS_MAIN: string;
-	export const VSCODE_GIT_ASKPASS_NODE: string;
-	export const VSCODE_GIT_IPC_HANDLE: string;
+	export const APPDATA: string
+	export const BASE_URL: string
+	export const COLORTERM: string
+	export const COMSPEC: string
+	export const DEV: string
+	export const DISPLAY: string
+	export const HOME: string
+	export const INIT_CWD: string
+	export const LANG: string
+	export const MODE: string
+	export const NODE: string
+	export const NODE_ENV: string
+	export const NODE_OPTIONS: string
+	export const NODE_PATH: string
+	export const npm_command: string
+	export const npm_config_engine_strict: string
+	export const npm_config_frozen_lockfile: string
+	export const npm_config_msvs_version: string
+	export const npm_config_node_gyp: string
+	export const npm_config_registry: string
+	export const npm_config_user_agent: string
+	export const npm_config_verify_deps_before_run: string
+	export const npm_execpath: string
+	export const npm_lifecycle_event: string
+	export const npm_lifecycle_script: string
+	export const npm_node_execpath: string
+	export const npm_package_name: string
+	export const npm_package_version: string
+	export const PATH: string
+	export const PATHEXT: string
+	export const PNPM_SCRIPT_SRC_DIR: string
+	export const PROD: string
+	export const ProgramData: string
+	export const PROMPT: string
+	export const PWD: string
+	export const SHELL: string
+	export const SYSTEMDRIVE: string
+	export const SYSTEMROOT: string
+	export const TEMP: string
+	export const TERM: string
+	export const TERM_PROGRAM: string
+	export const TEST: string
+	export const TMP: string
+	export const TURBO_HASH: string
+	export const VITEST: string
+	export const VSCODE_GIT_ASKPASS_EXTRA_ARGS: string
+	export const VSCODE_GIT_ASKPASS_MAIN: string
+	export const VSCODE_GIT_ASKPASS_NODE: string
+	export const VSCODE_GIT_IPC_HANDLE: string
 }
 
 /**
- * Similar to [`$env/static/private`](https://svelte.dev/docs/kit/$env-static-private), except that it only includes environment variables that begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) (which defaults to `PUBLIC_`), and can therefore safely be exposed to client-side code.
- * 
+ * Similar to [`$env/static/private`](https://svelte.dev/docs/kit/$env-static-private), except that
+ * it only includes environment variables that begin with
+ * [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) (which defaults to
+ * `PUBLIC_`), and can therefore safely be exposed to client-side code.
+ *
  * Values are replaced statically at build time.
- * 
+ *
  * ```ts
- * import { PUBLIC_BASE_URL } from '$env/static/public';
+ * import { PUBLIC_BASE_URL } from '$env/static/public'
  * ```
  */
-declare module '$env/static/public' {
-	
-}
+declare module '$env/static/public' {}
 
 /**
- * This module provides access to runtime environment variables, as defined by the platform you're running on. For example if you're using [`adapter-node`](https://github.com/sveltejs/kit/tree/main/packages/adapter-node) (or running [`vite preview`](https://svelte.dev/docs/kit/cli)), this is equivalent to `process.env`. This module only includes variables that _do not_ begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) _and do_ start with [`config.kit.env.privatePrefix`](https://svelte.dev/docs/kit/configuration#env) (if configured).
- * 
+ * This module provides access to runtime environment variables, as defined by the platform you're
+ * running on. For example if you're using
+ * [`adapter-node`](https://github.com/sveltejs/kit/tree/main/packages/adapter-node) (or running
+ * [`vite preview`](https://svelte.dev/docs/kit/cli)), this is equivalent to `process.env`. This
+ * module only includes variables that _do not_ begin with
+ * [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) _and do_ start
+ * with [`config.kit.env.privatePrefix`](https://svelte.dev/docs/kit/configuration#env) (if
+ * configured).
+ *
  * This module cannot be imported into client-side code.
- * 
+ *
  * Dynamic environment variables cannot be used during prerendering.
- * 
+ *
  * ```ts
- * import { env } from '$env/dynamic/private';
- * console.log(env.DEPLOYMENT_SPECIFIC_VARIABLE);
+ * import { env } from '$env/dynamic/private'
+ * console.log(env.DEPLOYMENT_SPECIFIC_VARIABLE)
  * ```
- * 
- * > In `dev`, `$env/dynamic` always includes environment variables from `.env`. In `prod`, this behavior will depend on your adapter.
+ *
+ * > In `dev`, `$env/dynamic` always includes environment variables from `.env`. In `prod`, this
+ * > behavior will depend on your adapter.
  */
 declare module '$env/dynamic/private' {
 	export const env: {
-		APPDATA: string;
-		BASE_URL: string;
-		COLORTERM: string;
-		COMSPEC: string;
-		DEV: string;
-		DISPLAY: string;
-		HOME: string;
-		INIT_CWD: string;
-		LANG: string;
-		MODE: string;
-		NODE: string;
-		NODE_ENV: string;
-		NODE_OPTIONS: string;
-		NODE_PATH: string;
-		npm_command: string;
-		npm_config_engine_strict: string;
-		npm_config_frozen_lockfile: string;
-		npm_config_msvs_version: string;
-		npm_config_node_gyp: string;
-		npm_config_registry: string;
-		npm_config_user_agent: string;
-		npm_config_verify_deps_before_run: string;
-		npm_execpath: string;
-		npm_lifecycle_event: string;
-		npm_lifecycle_script: string;
-		npm_node_execpath: string;
-		npm_package_name: string;
-		npm_package_version: string;
-		PATH: string;
-		PATHEXT: string;
-		PNPM_SCRIPT_SRC_DIR: string;
-		PROD: string;
-		ProgramData: string;
-		PROMPT: string;
-		PWD: string;
-		SHELL: string;
-		SYSTEMDRIVE: string;
-		SYSTEMROOT: string;
-		TEMP: string;
-		TERM: string;
-		TERM_PROGRAM: string;
-		TEST: string;
-		TMP: string;
-		TURBO_HASH: string;
-		VITEST: string;
-		VSCODE_GIT_ASKPASS_EXTRA_ARGS: string;
-		VSCODE_GIT_ASKPASS_MAIN: string;
-		VSCODE_GIT_ASKPASS_NODE: string;
-		VSCODE_GIT_IPC_HANDLE: string;
-		[key: `PUBLIC_${string}`]: undefined;
-		[key: `${string}`]: string | undefined;
+		APPDATA: string
+		BASE_URL: string
+		COLORTERM: string
+		COMSPEC: string
+		DEV: string
+		DISPLAY: string
+		HOME: string
+		INIT_CWD: string
+		LANG: string
+		MODE: string
+		NODE: string
+		NODE_ENV: string
+		NODE_OPTIONS: string
+		NODE_PATH: string
+		npm_command: string
+		npm_config_engine_strict: string
+		npm_config_frozen_lockfile: string
+		npm_config_msvs_version: string
+		npm_config_node_gyp: string
+		npm_config_registry: string
+		npm_config_user_agent: string
+		npm_config_verify_deps_before_run: string
+		npm_execpath: string
+		npm_lifecycle_event: string
+		npm_lifecycle_script: string
+		npm_node_execpath: string
+		npm_package_name: string
+		npm_package_version: string
+		PATH: string
+		PATHEXT: string
+		PNPM_SCRIPT_SRC_DIR: string
+		PROD: string
+		ProgramData: string
+		PROMPT: string
+		PWD: string
+		SHELL: string
+		SYSTEMDRIVE: string
+		SYSTEMROOT: string
+		TEMP: string
+		TERM: string
+		TERM_PROGRAM: string
+		TEST: string
+		TMP: string
+		TURBO_HASH: string
+		VITEST: string
+		VSCODE_GIT_ASKPASS_EXTRA_ARGS: string
+		VSCODE_GIT_ASKPASS_MAIN: string
+		VSCODE_GIT_ASKPASS_NODE: string
+		VSCODE_GIT_IPC_HANDLE: string
+		[key: `PUBLIC_${string}`]: undefined
+		[key: `${string}`]: string | undefined
 	}
 }
 
 /**
- * Similar to [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), but only includes variables that begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) (which defaults to `PUBLIC_`), and can therefore safely be exposed to client-side code.
- * 
- * Note that public dynamic environment variables must all be sent from the server to the client, causing larger network requests â€” when possible, use `$env/static/public` instead.
- * 
+ * Similar to [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), but only
+ * includes variables that begin with
+ * [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) (which defaults to
+ * `PUBLIC_`), and can therefore safely be exposed to client-side code.
+ *
+ * Note that public dynamic environment variables must all be sent from the server to the client,
+ * causing larger network requests â€” when possible, use `$env/static/public` instead.
+ *
  * Dynamic environment variables cannot be used during prerendering.
- * 
+ *
  * ```ts
- * import { env } from '$env/dynamic/public';
- * console.log(env.PUBLIC_DEPLOYMENT_SPECIFIC_VARIABLE);
+ * import { env } from '$env/dynamic/public'
+ * console.log(env.PUBLIC_DEPLOYMENT_SPECIFIC_VARIABLE)
  * ```
  */
 declare module '$env/dynamic/public' {
 	export const env: {
-		[key: `PUBLIC_${string}`]: string | undefined;
+		[key: `PUBLIC_${string}`]: string | undefined
 	}
 }
diff --git a/apps/boiler_plates/.svelte-kit/non-ambient.d.ts b/apps/boiler_plates/.svelte-kit/non-ambient.d.ts
index 46bd7fb..04a3bfb 100644
--- a/apps/boiler_plates/.svelte-kit/non-ambient.d.ts
+++ b/apps/boiler_plates/.svelte-kit/non-ambient.d.ts
@@ -1,11 +1,9 @@
-
 // this file is generated â€” do not edit it
 
-
-declare module "svelte/elements" {
+declare module 'svelte/elements' {
 	export interface HTMLAttributes<T> {
-		'data-sveltekit-keepfocus'?: true | '' | 'off' | undefined | null;
-		'data-sveltekit-noscroll'?: true | '' | 'off' | undefined | null;
+		'data-sveltekit-keepfocus'?: true | '' | 'off' | undefined | null
+		'data-sveltekit-noscroll'?: true | '' | 'off' | undefined | null
 		'data-sveltekit-preload-code'?:
 			| true
 			| ''
@@ -15,11 +13,11 @@ declare module "svelte/elements" {
 			| 'tap'
 			| 'off'
 			| undefined
-			| null;
-		'data-sveltekit-preload-data'?: true | '' | 'hover' | 'tap' | 'off' | undefined | null;
-		'data-sveltekit-reload'?: true | '' | 'off' | undefined | null;
-		'data-sveltekit-replacestate'?: true | '' | 'off' | undefined | null;
+			| null
+		'data-sveltekit-preload-data'?: true | '' | 'hover' | 'tap' | 'off' | undefined | null
+		'data-sveltekit-reload'?: true | '' | 'off' | undefined | null
+		'data-sveltekit-replacestate'?: true | '' | 'off' | undefined | null
 	}
 }
 
-export {};
+export {}
diff --git a/apps/boiler_plates/.svelte-kit/tsconfig.json b/apps/boiler_plates/.svelte-kit/tsconfig.json
index 9099af4..c6185c0 100644
--- a/apps/boiler_plates/.svelte-kit/tsconfig.json
+++ b/apps/boiler_plates/.svelte-kit/tsconfig.json
@@ -1,35 +1,29 @@
 {
 	"compilerOptions": {
 		"paths": {
-			"$shadcn": [
-				"../../../libraries/ui/src/shadcn"
-			],
-			"$shadcn/*": [
-				"../../../libraries/ui/src/shadcn/*"
-			],
-			"$lib": [
-				"../src/lib"
-			],
-			"$lib/*": [
-				"../src/lib/*"
-			]
+			"$shadcn": ["../../../libraries/ui/src/shadcn"],
+			"$shadcn/*": ["../../../libraries/ui/src/shadcn/*"],
+			"$lib": ["../src/lib"],
+			"$lib/*": ["../src/lib/*"]
 		},
-		"rootDirs": [
-			"..",
-			"./types"
-		],
+		"rootDirs": ["..", "./types"],
 		"verbatimModuleSyntax": true,
 		"isolatedModules": true,
-		"lib": [
-			"esnext",
-			"DOM",
-			"DOM.Iterable"
-		],
+		"lib": ["esnext", "DOM", "DOM.Iterable"],
 		"moduleResolution": "bundler",
 		"module": "esnext",
 		"noEmit": true,
 		"target": "esnext"
 	},
+	"exclude": [
+		"../node_modules/**",
+		"../src/service-worker.js",
+		"../src/service-worker/**/*.js",
+		"../src/service-worker.ts",
+		"../src/service-worker/**/*.ts",
+		"../src/service-worker.d.ts",
+		"../src/service-worker/**/*.d.ts"
+	],
 	"include": [
 		"ambient.d.ts",
 		"non-ambient.d.ts",
@@ -42,14 +36,5 @@
 		"../tests/**/*.js",
 		"../tests/**/*.ts",
 		"../tests/**/*.svelte"
-	],
-	"exclude": [
-		"../node_modules/**",
-		"../src/service-worker.js",
-		"../src/service-worker/**/*.js",
-		"../src/service-worker.ts",
-		"../src/service-worker/**/*.ts",
-		"../src/service-worker.d.ts",
-		"../src/service-worker/**/*.d.ts"
 	]
-}
\ No newline at end of file
+}
diff --git a/apps/boiler_plates/.svelte-kit/types/route_meta_data.json b/apps/boiler_plates/.svelte-kit/types/route_meta_data.json
index 98d94ef..797093d 100644
--- a/apps/boiler_plates/.svelte-kit/types/route_meta_data.json
+++ b/apps/boiler_plates/.svelte-kit/types/route_meta_data.json
@@ -2,4 +2,4 @@
 	"/": [],
 	"/about": [],
 	"/lorem": []
-}
\ No newline at end of file
+}
diff --git a/apps/boiler_plates/.svelte-kit/types/src/routes/$types.d.ts b/apps/boiler_plates/.svelte-kit/types/src/routes/$types.d.ts
index 95e770f..02535f8 100644
--- a/apps/boiler_plates/.svelte-kit/types/src/routes/$types.d.ts
+++ b/apps/boiler_plates/.svelte-kit/types/src/routes/$types.d.ts
@@ -1,24 +1,38 @@
-import type * as Kit from '@sveltejs/kit';
+import type * as Kit from '@sveltejs/kit'
 
-type Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never;
+type Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never
 // @ts-ignore
-type MatcherParam<M> = M extends (param : string) => param is infer U ? U extends string ? U : string : string;
-type RouteParams = {  };
-type RouteId = '/';
-type MaybeWithVoid<T> = {} extends T ? T | void : T;
-export type RequiredKeys<T> = { [K in keyof T]-?: {} extends { [P in K]: T[K] } ? never : K; }[keyof T];
-type OutputDataShape<T> = MaybeWithVoid<Omit<App.PageData, RequiredKeys<T>> & Partial<Pick<App.PageData, keyof T & keyof App.PageData>> & Record<string, any>>
-type EnsureDefined<T> = T extends null | undefined ? {} : T;
-type OptionalUnion<U extends Record<string, any>, A extends keyof U = U extends U ? keyof U : never> = U extends unknown ? { [P in Exclude<A, keyof U>]?: never } & U : never;
-export type Snapshot<T = any> = Kit.Snapshot<T>;
-type PageParentData = EnsureDefined<LayoutData>;
-type LayoutRouteId = RouteId | "/" | "/about" | "/lorem" | null
-type LayoutParams = RouteParams & {  }
-type LayoutParentData = EnsureDefined<{}>;
+type MatcherParam<M> =
+	M extends (param: string) => param is infer U ?
+		U extends string ?
+			U
+		:	string
+	:	string
+type RouteParams = {}
+type RouteId = '/'
+type MaybeWithVoid<T> = {} extends T ? T | void : T
+export type RequiredKeys<T> = {
+	[K in keyof T]-?: {} extends { [P in K]: T[K] } ? never : K
+}[keyof T]
+type OutputDataShape<T> = MaybeWithVoid<
+	Omit<App.PageData, RequiredKeys<T>> &
+		Partial<Pick<App.PageData, keyof T & keyof App.PageData>> &
+		Record<string, any>
+>
+type EnsureDefined<T> = T extends null | undefined ? {} : T
+type OptionalUnion<
+	U extends Record<string, any>,
+	A extends keyof U = U extends U ? keyof U : never,
+> = U extends unknown ? { [P in Exclude<A, keyof U>]?: never } & U : never
+export type Snapshot<T = any> = Kit.Snapshot<T>
+type PageParentData = EnsureDefined<LayoutData>
+type LayoutRouteId = RouteId | '/' | '/about' | '/lorem' | null
+type LayoutParams = RouteParams & {}
+type LayoutParentData = EnsureDefined<{}>
 
-export type PageServerData = null;
-export type PageData = Expand<PageParentData>;
+export type PageServerData = null
+export type PageData = Expand<PageParentData>
 export type PageProps = { data: PageData }
-export type LayoutServerData = null;
-export type LayoutData = Expand<LayoutParentData>;
-export type LayoutProps = { data: LayoutData; children: import("svelte").Snippet }
\ No newline at end of file
+export type LayoutServerData = null
+export type LayoutData = Expand<LayoutParentData>
+export type LayoutProps = { data: LayoutData; children: import('svelte').Snippet }
diff --git a/apps/boiler_plates/package.json b/apps/boiler_plates/package.json
index 8215532..44bbdf3 100644
--- a/apps/boiler_plates/package.json
+++ b/apps/boiler_plates/package.json
@@ -45,4 +45,4 @@
 		"$shadcn": "../../libraries/ui/src/shadcn",
 		"$shadcn/*": "../../libraries/ui/src/shadcn/*"
 	}
-}
+}
\ No newline at end of file
diff --git a/apps/boiler_plates/src/app.html b/apps/boiler_plates/src/app.html
index f20ce1b..6ac2ea8 100644
--- a/apps/boiler_plates/src/app.html
+++ b/apps/boiler_plates/src/app.html
@@ -1,17 +1,15 @@
 <!doctype html>
 <html lang="%lang%" dir="%paraglide.textDirection%">
+	<head>
+		<meta charset="utf-8" />
+		<link rel="icon" href="%sveltekit.assets%/favicon.png" />
+		<meta name="viewport" content="width=device-width, initial-scale=1" />
+		<script async src="https://code.iconify.design/iconify-icon/2.3.0/iconify-icon.min.js"></script>
 
-<head>
-	<meta charset="utf-8" />
-	<link rel="icon" href="%sveltekit.assets%/favicon.png" />
-	<meta name="viewport" content="width=device-width, initial-scale=1" />
-	<script async src="https://code.iconify.design/iconify-icon/2.3.0/iconify-icon.min.js"></script>
-
-	%sveltekit.head%
+		%sveltekit.head%
 	</head>
 
-<body data-sveltekit-preload-data="hover">
-	<div style="display: contents">%sveltekit.body%</div>
-</body>
-
-</html>
\ No newline at end of file
+	<body data-sveltekit-preload-data="hover">
+		<div style="display: contents">%sveltekit.body%</div>
+	</body>
+</html>
diff --git a/changes.patch b/changes.patch
index 518291a..f002285 100644
--- a/changes.patch
+++ b/changes.patch
@@ -1,756 +0,0 @@
-diff --git a/changes.patch b/changes.patch
-index d7987fe..e69de29 100644
---- a/changes.patch
-+++ b/changes.patch
-@@ -1,740 +0,0 @@
--diff --git a/apps/boiler_plates/.svelte-kit/ambient.d.ts b/apps/boiler_plates/.svelte-kit/ambient.d.ts
--index 34eff19..b948594 100644
----- a/apps/boiler_plates/.svelte-kit/ambient.d.ts
--+++ b/apps/boiler_plates/.svelte-kit/ambient.d.ts
--@@ -1,245 +1,263 @@
---
-- // this file is generated â€” do not edit it
-- 
---
-- /// <reference types="@sveltejs/kit" />
-- 
-- /**
--- * Environment variables [loaded by Vite](https://vitejs.dev/guide/env-and-mode.html#env-files) from `.env` files and `process.env`. Like [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), this module cannot be imported into client-side code. This module only includes variables that _do not_ begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) _and do_ start with [`config.kit.env.privatePrefix`](https://svelte.dev/docs/kit/configuration#env) (if configured).
--- * 
--- * _Unlike_ [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), the values exported from this module are statically injected into your bundle at build time, enabling optimisations like dead code elimination.
--- * 
--+ * Environment variables [loaded by Vite](https://vitejs.dev/guide/env-and-mode.html#env-files) from
--+ * `.env` files and `process.env`. Like
--+ * [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), this module cannot be
--+ * imported into client-side code. This module only includes variables that _do not_ begin with
--+ * [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) _and do_ start
--+ * with [`config.kit.env.privatePrefix`](https://svelte.dev/docs/kit/configuration#env) (if
--+ * configured).
--+ *
--+ * _Unlike_ [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), the values
--+ * exported from this module are statically injected into your bundle at build time, enabling
--+ * optimisations like dead code elimination.
--+ *
--  * ```ts
--- * import { API_KEY } from '$env/static/private';
--- * ```
--- * 
--- * Note that all environment variables referenced in your code should be declared (for example in an `.env` file), even if they don't have a value until the app is deployed:
--- * 
--+ * import { API_KEY } from '$env/static/private'
--  * ```
--- * MY_FEATURE_FLAG=""
--- * ```
--- * 
--+ *
--+ * Note that all environment variables referenced in your code should be declared (for example in an
--+ * `.env` file), even if they don't have a value until the app is deployed:
--+ *
--+ *     MY_FEATURE_FLAG = ''
--+ *
--  * You can override `.env` values from the command line like so:
--- * 
--+ *
--  * ```bash
--  * MY_FEATURE_FLAG="enabled" npm run dev
--  * ```
--  */
-- declare module '$env/static/private' {
---	export const APPDATA: string;
---	export const BASE_URL: string;
---	export const COLORTERM: string;
---	export const COMSPEC: string;
---	export const DEV: string;
---	export const DISPLAY: string;
---	export const HOME: string;
---	export const INIT_CWD: string;
---	export const LANG: string;
---	export const MODE: string;
---	export const NODE: string;
---	export const NODE_ENV: string;
---	export const NODE_OPTIONS: string;
---	export const NODE_PATH: string;
---	export const npm_command: string;
---	export const npm_config_engine_strict: string;
---	export const npm_config_frozen_lockfile: string;
---	export const npm_config_msvs_version: string;
---	export const npm_config_registry: string;
---	export const npm_config_user_agent: string;
---	export const npm_execpath: string;
---	export const npm_lifecycle_event: string;
---	export const npm_lifecycle_script: string;
---	export const npm_node_execpath: string;
---	export const npm_package_dependencies_luxon: string;
---	export const npm_package_dependencies_nanoid: string;
---	export const npm_package_dependencies_ramda: string;
---	export const npm_package_dependencies_ufo: string;
---	export const npm_package_dependencies_xstate: string;
---	export const npm_package_dependencies_zod: string;
---	export const npm_package_dependencies__formkit_auto_animate: string;
---	export const npm_package_dependencies__library_base: string;
---	export const npm_package_dependencies__library_helpers: string;
---	export const npm_package_dependencies__library_library_wrappers: string;
---	export const npm_package_dependencies__library_ui: string;
---	export const npm_package_devDependencies_daisyui: string;
---	export const npm_package_devDependencies_tailwindcss: string;
---	export const npm_package_devDependencies_tailwindcss_animate: string;
---	export const npm_package_devDependencies__sveltejs_kit: string;
---	export const npm_package_import__shadcn: string;
---	export const npm_package_import__shadcn__: string;
---	export const npm_package_name: string;
---	export const npm_package_private: string;
---	export const npm_package_scripts_build: string;
---	export const npm_package_scripts_check: string;
---	export const npm_package_scripts_check_watch: string;
---	export const npm_package_scripts_depCheck: string;
---	export const npm_package_scripts_dev: string;
---	export const npm_package_scripts_eslint: string;
---	export const npm_package_scripts_eslint_fix: string;
---	export const npm_package_scripts_format: string;
---	export const npm_package_scripts_playwright_install_env: string;
---	export const npm_package_scripts_playwright_report: string;
---	export const npm_package_scripts_preview: string;
---	export const npm_package_scripts_stylelint: string;
---	export const npm_package_scripts_stylelint_fix: string;
---	export const npm_package_scripts_test_e2e: string;
---	export const npm_package_scripts_test_unit: string;
---	export const npm_package_scripts_type_sync: string;
---	export const npm_package_type: string;
---	export const npm_package_version: string;
---	export const PATH: string;
---	export const PATHEXT: string;
---	export const PNPM_SCRIPT_SRC_DIR: string;
---	export const PROD: string;
---	export const ProgramData: string;
---	export const PROMPT: string;
---	export const PWD: string;
---	export const SHELL: string;
---	export const SYSTEMDRIVE: string;
---	export const SYSTEMROOT: string;
---	export const TEMP: string;
---	export const TERM: string;
---	export const TERM_PROGRAM: string;
---	export const TEST: string;
---	export const TMP: string;
---	export const TURBO_HASH: string;
---	export const VITEST: string;
---	export const VSCODE_GIT_ASKPASS_EXTRA_ARGS: string;
---	export const VSCODE_GIT_ASKPASS_MAIN: string;
---	export const VSCODE_GIT_ASKPASS_NODE: string;
---	export const VSCODE_GIT_IPC_HANDLE: string;
--+	export const APPDATA: string
--+	export const BASE_URL: string
--+	export const COLORTERM: string
--+	export const COMSPEC: string
--+	export const DEV: string
--+	export const DISPLAY: string
--+	export const HOME: string
--+	export const INIT_CWD: string
--+	export const LANG: string
--+	export const MODE: string
--+	export const NODE: string
--+	export const NODE_ENV: string
--+	export const NODE_OPTIONS: string
--+	export const NODE_PATH: string
--+	export const npm_command: string
--+	export const npm_config_engine_strict: string
--+	export const npm_config_frozen_lockfile: string
--+	export const npm_config_msvs_version: string
--+	export const npm_config_registry: string
--+	export const npm_config_user_agent: string
--+	export const npm_execpath: string
--+	export const npm_lifecycle_event: string
--+	export const npm_lifecycle_script: string
--+	export const npm_node_execpath: string
--+	export const npm_package_dependencies_luxon: string
--+	export const npm_package_dependencies_nanoid: string
--+	export const npm_package_dependencies_ramda: string
--+	export const npm_package_dependencies_ufo: string
--+	export const npm_package_dependencies_xstate: string
--+	export const npm_package_dependencies_zod: string
--+	export const npm_package_dependencies__formkit_auto_animate: string
--+	export const npm_package_dependencies__library_base: string
--+	export const npm_package_dependencies__library_helpers: string
--+	export const npm_package_dependencies__library_library_wrappers: string
--+	export const npm_package_dependencies__library_ui: string
--+	export const npm_package_devDependencies_daisyui: string
--+	export const npm_package_devDependencies_tailwindcss: string
--+	export const npm_package_devDependencies_tailwindcss_animate: string
--+	export const npm_package_devDependencies__sveltejs_kit: string
--+	export const npm_package_import__shadcn: string
--+	export const npm_package_import__shadcn__: string
--+	export const npm_package_name: string
--+	export const npm_package_private: string
--+	export const npm_package_scripts_build: string
--+	export const npm_package_scripts_check: string
--+	export const npm_package_scripts_check_watch: string
--+	export const npm_package_scripts_depCheck: string
--+	export const npm_package_scripts_dev: string
--+	export const npm_package_scripts_eslint: string
--+	export const npm_package_scripts_eslint_fix: string
--+	export const npm_package_scripts_format: string
--+	export const npm_package_scripts_playwright_install_env: string
--+	export const npm_package_scripts_playwright_report: string
--+	export const npm_package_scripts_preview: string
--+	export const npm_package_scripts_stylelint: string
--+	export const npm_package_scripts_stylelint_fix: string
--+	export const npm_package_scripts_test_e2e: string
--+	export const npm_package_scripts_test_unit: string
--+	export const npm_package_scripts_type_sync: string
--+	export const npm_package_type: string
--+	export const npm_package_version: string
--+	export const PATH: string
--+	export const PATHEXT: string
--+	export const PNPM_SCRIPT_SRC_DIR: string
--+	export const PROD: string
--+	export const ProgramData: string
--+	export const PROMPT: string
--+	export const PWD: string
--+	export const SHELL: string
--+	export const SYSTEMDRIVE: string
--+	export const SYSTEMROOT: string
--+	export const TEMP: string
--+	export const TERM: string
--+	export const TERM_PROGRAM: string
--+	export const TEST: string
--+	export const TMP: string
--+	export const TURBO_HASH: string
--+	export const VITEST: string
--+	export const VSCODE_GIT_ASKPASS_EXTRA_ARGS: string
--+	export const VSCODE_GIT_ASKPASS_MAIN: string
--+	export const VSCODE_GIT_ASKPASS_NODE: string
--+	export const VSCODE_GIT_IPC_HANDLE: string
-- }
-- 
-- /**
--- * Similar to [`$env/static/private`](https://svelte.dev/docs/kit/$env-static-private), except that it only includes environment variables that begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) (which defaults to `PUBLIC_`), and can therefore safely be exposed to client-side code.
--- * 
--+ * Similar to [`$env/static/private`](https://svelte.dev/docs/kit/$env-static-private), except that
--+ * it only includes environment variables that begin with
--+ * [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) (which defaults to
--+ * `PUBLIC_`), and can therefore safely be exposed to client-side code.
--+ *
--  * Values are replaced statically at build time.
--- * 
--+ *
--  * ```ts
--- * import { PUBLIC_BASE_URL } from '$env/static/public';
--+ * import { PUBLIC_BASE_URL } from '$env/static/public'
--  * ```
--  */
---declare module '$env/static/public' {
---	
---}
--+declare module '$env/static/public' {}
-- 
-- /**
--- * This module provides access to runtime environment variables, as defined by the platform you're running on. For example if you're using [`adapter-node`](https://github.com/sveltejs/kit/tree/main/packages/adapter-node) (or running [`vite preview`](https://svelte.dev/docs/kit/cli)), this is equivalent to `process.env`. This module only includes variables that _do not_ begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) _and do_ start with [`config.kit.env.privatePrefix`](https://svelte.dev/docs/kit/configuration#env) (if configured).
--- * 
--+ * This module provides access to runtime environment variables, as defined by the platform you're
--+ * running on. For example if you're using
--+ * [`adapter-node`](https://github.com/sveltejs/kit/tree/main/packages/adapter-node) (or running
--+ * [`vite preview`](https://svelte.dev/docs/kit/cli)), this is equivalent to `process.env`. This
--+ * module only includes variables that _do not_ begin with
--+ * [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) _and do_ start
--+ * with [`config.kit.env.privatePrefix`](https://svelte.dev/docs/kit/configuration#env) (if
--+ * configured).
--+ *
--  * This module cannot be imported into client-side code.
--- * 
--+ *
--  * Dynamic environment variables cannot be used during prerendering.
--- * 
--+ *
--  * ```ts
--- * import { env } from '$env/dynamic/private';
--- * console.log(env.DEPLOYMENT_SPECIFIC_VARIABLE);
--+ * import { env } from '$env/dynamic/private'
--+ * console.log(env.DEPLOYMENT_SPECIFIC_VARIABLE)
--  * ```
--- * 
--- * > In `dev`, `$env/dynamic` always includes environment variables from `.env`. In `prod`, this behavior will depend on your adapter.
--+ *
--+ * > In `dev`, `$env/dynamic` always includes environment variables from `.env`. In `prod`, this
--+ * > behavior will depend on your adapter.
--  */
-- declare module '$env/dynamic/private' {
-- 	export const env: {
---		APPDATA: string;
---		BASE_URL: string;
---		COLORTERM: string;
---		COMSPEC: string;
---		DEV: string;
---		DISPLAY: string;
---		HOME: string;
---		INIT_CWD: string;
---		LANG: string;
---		MODE: string;
---		NODE: string;
---		NODE_ENV: string;
---		NODE_OPTIONS: string;
---		NODE_PATH: string;
---		npm_command: string;
---		npm_config_engine_strict: string;
---		npm_config_frozen_lockfile: string;
---		npm_config_msvs_version: string;
---		npm_config_registry: string;
---		npm_config_user_agent: string;
---		npm_execpath: string;
---		npm_lifecycle_event: string;
---		npm_lifecycle_script: string;
---		npm_node_execpath: string;
---		npm_package_dependencies_luxon: string;
---		npm_package_dependencies_nanoid: string;
---		npm_package_dependencies_ramda: string;
---		npm_package_dependencies_ufo: string;
---		npm_package_dependencies_xstate: string;
---		npm_package_dependencies_zod: string;
---		npm_package_dependencies__formkit_auto_animate: string;
---		npm_package_dependencies__library_base: string;
---		npm_package_dependencies__library_helpers: string;
---		npm_package_dependencies__library_library_wrappers: string;
---		npm_package_dependencies__library_ui: string;
---		npm_package_devDependencies_daisyui: string;
---		npm_package_devDependencies_tailwindcss: string;
---		npm_package_devDependencies_tailwindcss_animate: string;
---		npm_package_devDependencies__sveltejs_kit: string;
---		npm_package_import__shadcn: string;
---		npm_package_import__shadcn__: string;
---		npm_package_name: string;
---		npm_package_private: string;
---		npm_package_scripts_build: string;
---		npm_package_scripts_check: string;
---		npm_package_scripts_check_watch: string;
---		npm_package_scripts_depCheck: string;
---		npm_package_scripts_dev: string;
---		npm_package_scripts_eslint: string;
---		npm_package_scripts_eslint_fix: string;
---		npm_package_scripts_format: string;
---		npm_package_scripts_playwright_install_env: string;
---		npm_package_scripts_playwright_report: string;
---		npm_package_scripts_preview: string;
---		npm_package_scripts_stylelint: string;
---		npm_package_scripts_stylelint_fix: string;
---		npm_package_scripts_test_e2e: string;
---		npm_package_scripts_test_unit: string;
---		npm_package_scripts_type_sync: string;
---		npm_package_type: string;
---		npm_package_version: string;
---		PATH: string;
---		PATHEXT: string;
---		PNPM_SCRIPT_SRC_DIR: string;
---		PROD: string;
---		ProgramData: string;
---		PROMPT: string;
---		PWD: string;
---		SHELL: string;
---		SYSTEMDRIVE: string;
---		SYSTEMROOT: string;
---		TEMP: string;
---		TERM: string;
---		TERM_PROGRAM: string;
---		TEST: string;
---		TMP: string;
---		TURBO_HASH: string;
---		VITEST: string;
---		VSCODE_GIT_ASKPASS_EXTRA_ARGS: string;
---		VSCODE_GIT_ASKPASS_MAIN: string;
---		VSCODE_GIT_ASKPASS_NODE: string;
---		VSCODE_GIT_IPC_HANDLE: string;
---		[key: `PUBLIC_${string}`]: undefined;
---		[key: `${string}`]: string | undefined;
--+		APPDATA: string
--+		BASE_URL: string
--+		COLORTERM: string
--+		COMSPEC: string
--+		DEV: string
--+		DISPLAY: string
--+		HOME: string
--+		INIT_CWD: string
--+		LANG: string
--+		MODE: string
--+		NODE: string
--+		NODE_ENV: string
--+		NODE_OPTIONS: string
--+		NODE_PATH: string
--+		npm_command: string
--+		npm_config_engine_strict: string
--+		npm_config_frozen_lockfile: string
--+		npm_config_msvs_version: string
--+		npm_config_registry: string
--+		npm_config_user_agent: string
--+		npm_execpath: string
--+		npm_lifecycle_event: string
--+		npm_lifecycle_script: string
--+		npm_node_execpath: string
--+		npm_package_dependencies_luxon: string
--+		npm_package_dependencies_nanoid: string
--+		npm_package_dependencies_ramda: string
--+		npm_package_dependencies_ufo: string
--+		npm_package_dependencies_xstate: string
--+		npm_package_dependencies_zod: string
--+		npm_package_dependencies__formkit_auto_animate: string
--+		npm_package_dependencies__library_base: string
--+		npm_package_dependencies__library_helpers: string
--+		npm_package_dependencies__library_library_wrappers: string
--+		npm_package_dependencies__library_ui: string
--+		npm_package_devDependencies_daisyui: string
--+		npm_package_devDependencies_tailwindcss: string
--+		npm_package_devDependencies_tailwindcss_animate: string
--+		npm_package_devDependencies__sveltejs_kit: string
--+		npm_package_import__shadcn: string
--+		npm_package_import__shadcn__: string
--+		npm_package_name: string
--+		npm_package_private: string
--+		npm_package_scripts_build: string
--+		npm_package_scripts_check: string
--+		npm_package_scripts_check_watch: string
--+		npm_package_scripts_depCheck: string
--+		npm_package_scripts_dev: string
--+		npm_package_scripts_eslint: string
--+		npm_package_scripts_eslint_fix: string
--+		npm_package_scripts_format: string
--+		npm_package_scripts_playwright_install_env: string
--+		npm_package_scripts_playwright_report: string
--+		npm_package_scripts_preview: string
--+		npm_package_scripts_stylelint: string
--+		npm_package_scripts_stylelint_fix: string
--+		npm_package_scripts_test_e2e: string
--+		npm_package_scripts_test_unit: string
--+		npm_package_scripts_type_sync: string
--+		npm_package_type: string
--+		npm_package_version: string
--+		PATH: string
--+		PATHEXT: string
--+		PNPM_SCRIPT_SRC_DIR: string
--+		PROD: string
--+		ProgramData: string
--+		PROMPT: string
--+		PWD: string
--+		SHELL: string
--+		SYSTEMDRIVE: string
--+		SYSTEMROOT: string
--+		TEMP: string
--+		TERM: string
--+		TERM_PROGRAM: string
--+		TEST: string
--+		TMP: string
--+		TURBO_HASH: string
--+		VITEST: string
--+		VSCODE_GIT_ASKPASS_EXTRA_ARGS: string
--+		VSCODE_GIT_ASKPASS_MAIN: string
--+		VSCODE_GIT_ASKPASS_NODE: string
--+		VSCODE_GIT_IPC_HANDLE: string
--+		[key: `PUBLIC_${string}`]: undefined
--+		[key: `${string}`]: string | undefined
-- 	}
-- }
-- 
-- /**
--- * Similar to [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), but only includes variables that begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) (which defaults to `PUBLIC_`), and can therefore safely be exposed to client-side code.
--- * 
--- * Note that public dynamic environment variables must all be sent from the server to the client, causing larger network requests â€” when possible, use `$env/static/public` instead.
--- * 
--+ * Similar to [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), but only
--+ * includes variables that begin with
--+ * [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) (which defaults to
--+ * `PUBLIC_`), and can therefore safely be exposed to client-side code.
--+ *
--+ * Note that public dynamic environment variables must all be sent from the server to the client,
--+ * causing larger network requests â€” when possible, use `$env/static/public` instead.
--+ *
--  * Dynamic environment variables cannot be used during prerendering.
--- * 
--+ *
--  * ```ts
--- * import { env } from '$env/dynamic/public';
--- * console.log(env.PUBLIC_DEPLOYMENT_SPECIFIC_VARIABLE);
--+ * import { env } from '$env/dynamic/public'
--+ * console.log(env.PUBLIC_DEPLOYMENT_SPECIFIC_VARIABLE)
--  * ```
--  */
-- declare module '$env/dynamic/public' {
-- 	export const env: {
---		[key: `PUBLIC_${string}`]: string | undefined;
--+		[key: `PUBLIC_${string}`]: string | undefined
-- 	}
-- }
--diff --git a/apps/boiler_plates/.svelte-kit/non-ambient.d.ts b/apps/boiler_plates/.svelte-kit/non-ambient.d.ts
--index 46bd7fb..04a3bfb 100644
----- a/apps/boiler_plates/.svelte-kit/non-ambient.d.ts
--+++ b/apps/boiler_plates/.svelte-kit/non-ambient.d.ts
--@@ -1,11 +1,9 @@
---
-- // this file is generated â€” do not edit it
-- 
---
---declare module "svelte/elements" {
--+declare module 'svelte/elements' {
-- 	export interface HTMLAttributes<T> {
---		'data-sveltekit-keepfocus'?: true | '' | 'off' | undefined | null;
---		'data-sveltekit-noscroll'?: true | '' | 'off' | undefined | null;
--+		'data-sveltekit-keepfocus'?: true | '' | 'off' | undefined | null
--+		'data-sveltekit-noscroll'?: true | '' | 'off' | undefined | null
-- 		'data-sveltekit-preload-code'?:
-- 			| true
-- 			| ''
--@@ -15,11 +13,11 @@ declare module "svelte/elements" {
-- 			| 'tap'
-- 			| 'off'
-- 			| undefined
---			| null;
---		'data-sveltekit-preload-data'?: true | '' | 'hover' | 'tap' | 'off' | undefined | null;
---		'data-sveltekit-reload'?: true | '' | 'off' | undefined | null;
---		'data-sveltekit-replacestate'?: true | '' | 'off' | undefined | null;
--+			| null
--+		'data-sveltekit-preload-data'?: true | '' | 'hover' | 'tap' | 'off' | undefined | null
--+		'data-sveltekit-reload'?: true | '' | 'off' | undefined | null
--+		'data-sveltekit-replacestate'?: true | '' | 'off' | undefined | null
-- 	}
-- }
-- 
---export {};
--+export {}
--diff --git a/apps/boiler_plates/.svelte-kit/tsconfig.json b/apps/boiler_plates/.svelte-kit/tsconfig.json
--index 9099af4..c6185c0 100644
----- a/apps/boiler_plates/.svelte-kit/tsconfig.json
--+++ b/apps/boiler_plates/.svelte-kit/tsconfig.json
--@@ -1,35 +1,29 @@
-- {
-- 	"compilerOptions": {
-- 		"paths": {
---			"$shadcn": [
---				"../../../libraries/ui/src/shadcn"
---			],
---			"$shadcn/*": [
---				"../../../libraries/ui/src/shadcn/*"
---			],
---			"$lib": [
---				"../src/lib"
---			],
---			"$lib/*": [
---				"../src/lib/*"
---			]
--+			"$shadcn": ["../../../libraries/ui/src/shadcn"],
--+			"$shadcn/*": ["../../../libraries/ui/src/shadcn/*"],
--+			"$lib": ["../src/lib"],
--+			"$lib/*": ["../src/lib/*"]
-- 		},
---		"rootDirs": [
---			"..",
---			"./types"
---		],
--+		"rootDirs": ["..", "./types"],
-- 		"verbatimModuleSyntax": true,
-- 		"isolatedModules": true,
---		"lib": [
---			"esnext",
---			"DOM",
---			"DOM.Iterable"
---		],
--+		"lib": ["esnext", "DOM", "DOM.Iterable"],
-- 		"moduleResolution": "bundler",
-- 		"module": "esnext",
-- 		"noEmit": true,
-- 		"target": "esnext"
-- 	},
--+	"exclude": [
--+		"../node_modules/**",
--+		"../src/service-worker.js",
--+		"../src/service-worker/**/*.js",
--+		"../src/service-worker.ts",
--+		"../src/service-worker/**/*.ts",
--+		"../src/service-worker.d.ts",
--+		"../src/service-worker/**/*.d.ts"
--+	],
-- 	"include": [
-- 		"ambient.d.ts",
-- 		"non-ambient.d.ts",
--@@ -42,14 +36,5 @@
-- 		"../tests/**/*.js",
-- 		"../tests/**/*.ts",
-- 		"../tests/**/*.svelte"
---	],
---	"exclude": [
---		"../node_modules/**",
---		"../src/service-worker.js",
---		"../src/service-worker/**/*.js",
---		"../src/service-worker.ts",
---		"../src/service-worker/**/*.ts",
---		"../src/service-worker.d.ts",
---		"../src/service-worker/**/*.d.ts"
-- 	]
---}
--\ No newline at end of file
--+}
--diff --git a/apps/boiler_plates/.svelte-kit/types/route_meta_data.json b/apps/boiler_plates/.svelte-kit/types/route_meta_data.json
--index 98d94ef..797093d 100644
----- a/apps/boiler_plates/.svelte-kit/types/route_meta_data.json
--+++ b/apps/boiler_plates/.svelte-kit/types/route_meta_data.json
--@@ -2,4 +2,4 @@
-- 	"/": [],
-- 	"/about": [],
-- 	"/lorem": []
---}
--\ No newline at end of file
--+}
--diff --git a/apps/boiler_plates/.svelte-kit/types/src/routes/$types.d.ts b/apps/boiler_plates/.svelte-kit/types/src/routes/$types.d.ts
--index 95e770f..02535f8 100644
----- a/apps/boiler_plates/.svelte-kit/types/src/routes/$types.d.ts
--+++ b/apps/boiler_plates/.svelte-kit/types/src/routes/$types.d.ts
--@@ -1,24 +1,38 @@
---import type * as Kit from '@sveltejs/kit';
--+import type * as Kit from '@sveltejs/kit'
-- 
---type Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never;
--+type Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never
-- // @ts-ignore
---type MatcherParam<M> = M extends (param : string) => param is infer U ? U extends string ? U : string : string;
---type RouteParams = {  };
---type RouteId = '/';
---type MaybeWithVoid<T> = {} extends T ? T | void : T;
---export type RequiredKeys<T> = { [K in keyof T]-?: {} extends { [P in K]: T[K] } ? never : K; }[keyof T];
---type OutputDataShape<T> = MaybeWithVoid<Omit<App.PageData, RequiredKeys<T>> & Partial<Pick<App.PageData, keyof T & keyof App.PageData>> & Record<string, any>>
---type EnsureDefined<T> = T extends null | undefined ? {} : T;
---type OptionalUnion<U extends Record<string, any>, A extends keyof U = U extends U ? keyof U : never> = U extends unknown ? { [P in Exclude<A, keyof U>]?: never } & U : never;
---export type Snapshot<T = any> = Kit.Snapshot<T>;
---type PageParentData = EnsureDefined<LayoutData>;
---type LayoutRouteId = RouteId | "/" | "/about" | "/lorem" | null
---type LayoutParams = RouteParams & {  }
---type LayoutParentData = EnsureDefined<{}>;
--+type MatcherParam<M> =
--+	M extends (param: string) => param is infer U ?
--+		U extends string ?
--+			U
--+		:	string
--+	:	string
--+type RouteParams = {}
--+type RouteId = '/'
--+type MaybeWithVoid<T> = {} extends T ? T | void : T
--+export type RequiredKeys<T> = {
--+	[K in keyof T]-?: {} extends { [P in K]: T[K] } ? never : K
--+}[keyof T]
--+type OutputDataShape<T> = MaybeWithVoid<
--+	Omit<App.PageData, RequiredKeys<T>> &
--+		Partial<Pick<App.PageData, keyof T & keyof App.PageData>> &
--+		Record<string, any>
--+>
--+type EnsureDefined<T> = T extends null | undefined ? {} : T
--+type OptionalUnion<
--+	U extends Record<string, any>,
--+	A extends keyof U = U extends U ? keyof U : never,
--+> = U extends unknown ? { [P in Exclude<A, keyof U>]?: never } & U : never
--+export type Snapshot<T = any> = Kit.Snapshot<T>
--+type PageParentData = EnsureDefined<LayoutData>
--+type LayoutRouteId = RouteId | '/' | '/about' | '/lorem' | null
--+type LayoutParams = RouteParams & {}
--+type LayoutParentData = EnsureDefined<{}>
-- 
---export type PageServerData = null;
---export type PageData = Expand<PageParentData>;
--+export type PageServerData = null
--+export type PageData = Expand<PageParentData>
-- export type PageProps = { data: PageData }
---export type LayoutServerData = null;
---export type LayoutData = Expand<LayoutParentData>;
---export type LayoutProps = { data: LayoutData; children: import("svelte").Snippet }
--\ No newline at end of file
--+export type LayoutServerData = null
--+export type LayoutData = Expand<LayoutParentData>
--+export type LayoutProps = { data: LayoutData; children: import('svelte').Snippet }
--diff --git a/changes.patch b/changes.patch
--index e8cf512..a0fdd86 100644
----- a/changes.patch
--+++ b/changes.patch
--@@ -1,80 +0,0 @@
---diff --git a/libraries/ui/tsconfig.json b/libraries/ui/tsconfig.json
---index e7a606a..bbe5232 100644
------ a/libraries/ui/tsconfig.json
---+++ b/libraries/ui/tsconfig.json
---@@ -5,12 +5,8 @@
--- 	],
--- 	"compilerOptions": {
--- 		"paths": {
----			"$shadcn": [
----				"./src/shadcn"
----			],
----			"$shadcn/*": [
----				"./src/shadcn/*"
----			]
---+			"$shadcn": ["./src/shadcn"],
---+			"$shadcn/*": ["./src/shadcn/*"]
--- 		}
--- 	},
--- 	"exclude": [
---@@ -29,57 +25,22 @@
--- 		"src/service-worker/**",
--- 		"static/**"
--- 	],
----	"extends": [
----		"@library/base/tsconfig.json"
----	],
---+	"extends": ["@library/base/tsconfig.json"],
--- 	"include": [
--- 		"src/**/*",
--- 		"*.js",
--- 		"*.ts",
--- 
----
----
----
--- 		"*.svelte",
--- 
----
----
----
----
----
----
----
----
----
----
----
----
--- 		"*.cjs",
--- 
----
----
----
----
----
----
----
----
----
----
----
----
----
--- 		"*.mjs",
--- 		"**/*.js",
--- 		"**/*.ts",
--- 
----
----
----
----
----
--- 		"**/*.svelte",
--- 		"**/*.cjs",
--- 		"**/*.mjs"
--- 	]
----}
---\ No newline at end of file
---+}
-diff --git a/libraries/base/package.json b/libraries/base/package.json
-index f0b6947..39fa98e 100644
---- a/libraries/base/package.json
-+++ b/libraries/base/package.json
-@@ -151,4 +151,4 @@
- 		"./traverse.test.js": "./e2e/traverse.test.js",
- 		"./vite.config.js": "./vite.config.js"
- 	}
--}
-+}
-\ No newline at end of file
diff --git a/libraries/base/package.json b/libraries/base/package.json
index af57b7f..3839b5d 100644
--- a/libraries/base/package.json
+++ b/libraries/base/package.json
@@ -143,4 +143,4 @@
 		"./traverse.test.js": "./e2e/traverse.test.js",
 		"./vite.config.js": "./vite.config.js"
 	}
-}
+}
\ No newline at end of file
