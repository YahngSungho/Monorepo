@import url('./openProps-props-media.css');

/* theme.light.css */
:where(html) {
	--link: var(--indigo-7);
	--link-visited: var(--purple-7);

	--text-1: var(--gray-12);
	--text-2: var(--gray-7);

	@media (--HDcolor) {
		@supports (color: color(display-p3 0 0 0)) {
			--link: color(display-p3 0.1 0.39 1);
			--link-visited: color(display-p3 0.6 0.2 1);
		}
	}

	@media (--motionOK) {
		scroll-behavior: smooth;
	}
}

/* normalize.light.css */
:where(html) {
	--shadow-color: 220 3% 15%;
	--shadow-strength: 1%;
	--inner-shadow-highlight: inset 0 -0.5px 0 0 var(--gray-0), inset 0 0.5px 0 0 var(--gray-12);
}

:where(html) {
	line-height: var(--font-lineheight-3);
	text-size-adjust: none; /* https://kilianvalkhof.com/2022/css-html/your-css-reset-needs-text-size-adjust-probably/ */
}

:where(dialog) {
	background-color: var(--surface-1);
}

:where(button, .btn) {
	--_highlight: var(--_highlight-light);
	--_bg: var(--_bg-light);
	--_ink-shadow: var(--_ink-shadow-light);

	& :where([type='reset']) {
		--_text: var(--red-6);
		--_border: var(--red-3);
	}
}

/* normalize.src.css */
:where(:not(dialog)) {
	margin: 0;
}

@media (--motionOK) {
	:where(:focus-visible) {
		transition: outline-offset 145ms var(--ease-2);
	}

	:where(:not(:active):focus-visible) {
		transition-duration: 0.25s;
	}
}

:where(a, u, ins, abbr) {
	text-underline-offset: 1px;

	@supports (-moz-appearance: none) {
		text-underline-offset: 2px;
	}
}

:where(
	a[href],
	area,
	button,
	input:not(
		[type='text'],
		[type='email'],
		[type='number'],
		[type='password'],
		[type=''],
		[type='tel'],
		[type='url']
	),
	label[for],
	select,
	summary,
	[tabindex]:not([tabindex*='-'], pre)
) {
	cursor: pointer;
}

:where(
	a[href],
	area,
	button,
	input,
	label[for],
	select,
	summary,
	textarea,
	[tabindex]:not([tabindex*='-'])
) {
	touch-action: manipulation;

	-webkit-tap-highlight-color: transparent;
}

:where(img, svg, video, canvas, audio, iframe, embed, object) {
	display: block;
}

:where(img, svg, video) {
	max-inline-size: 100%;
	block-size: auto;
}

:where(input, button, textarea, select),
:where(input[type='file'])::-webkit-file-upload-button {
	font: inherit;
	font-size: inherit;
	/* color: inherit; */
	letter-spacing: inherit;
}

::placeholder {
	opacity: 0.75;
}

:where(textarea) {
	resize: block;
	min-inline-size: var(--size-content-1);
	min-block-size: 2lh;

	field-sizing: content;
}

:where(svg:not([width])) {
	inline-size: 1em;
}

:where(:not(pre) > code, kbd) {
	white-space: nowrap;
}

:where(pre) {
	min-inline-size: 0;
	max-inline-size: max-content;
	white-space: pre;
}

:where(:not(pre) > code) {
	writing-mode: lr;
}

:where(p) {
	max-inline-size: var(--size-content-long);
}

:where(figure) {
	display: grid;
	place-items: center;

	& > :where(figcaption) {
		text-wrap: balance;
	}
}

:where(blockquote) {
	display: grid;
	gap: var(--size-3);

	max-inline-size: var(--size-content-2);
	padding-block: var(--size-3);
	padding-inline: var(--size-4);
}

:where(fieldset) {
	border: var(--border-size-1) solid var(--surface-4);
	border-radius: var(--radius-2);
}

:where(del) {
	color: var(--red-2);
}

:where(ins) {
	color: var(--green-1);
}

:where(abbr) {
	text-decoration-color: var(--blue-5);
}

:where(dialog) {
	color: inherit;
}

:where(menu) {
	display: flex;
	padding-inline-start: 0;
}

:where(sup) {
	font-size: 0.5em;
}

:where(table) {
	inline-size: fit-content;
	/* border: 1px solid var(--surface-2); */
}

:where(table :is(a, button, [contenteditable]):is(:focus-visible)) {
	outline-offset: -2px;
}

:where(td) {
	max-inline-size: var(--size-content-long);
}

:where(td, th) {
	text-align: start;
}

:where(:is(td, th):not([align])) {
	text-align: center;
}

:where(thead) {
	border-collapse: collapse;
}

:where(button, input, select, textarea) {
	border: none;
}
