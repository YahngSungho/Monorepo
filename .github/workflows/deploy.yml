name: Deploy

on:
  workflow_call:
    inputs:
      called_by_main:
        required: false
        type: boolean
        default: false
  pull_request:
    types:
      - labeled

permissions:
  pull-requests: write # Necessary to comment on PRs
  issues: read # Necessary to read issue comments
  contents: read # Necessary to access the repo content

jobs:
  main:
    name: Main
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: >
      (
        (inputs.called_by_main == true) ||
        (github.event_name == 'pull_request' && github.event.action == 'labeled' && github.event.label.name == 'force-deploy')
      )

    steps:
      - name: Skip deploy for dependabot PR
        if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'dependabot') }}
        run: echo "Dependabot PR detected; skipping deploy in main job."
      # 저장소 코드 체크아웃
      - name: Checkout repository
        if: ${{ !(github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'dependabot')) }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
          token: ${{ secrets.TOKEN1 }}

      - name: Install dotenvx
        if: ${{ !(github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'dependabot')) }}
        run: curl -sfS https://dotenvx.sh/install.sh | sh

      - name: Load and mask only .env keys into job env
        if: ${{ !(github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'dependabot')) }}
        shell: bash
        run: |
          # 1) .env 파일들에서 "키 이름"만 추출(주석/공백 라인 무시)
          awk -F= '!/^#/ && NF { gsub(/^[ \t]+|[ \t]+$/,"",$1); print $1 }' .env.public .env.private \
            | sort -u > .env.masklist

          # 1.5) DOTENV_PRIVATE_KEY_PRIVATE 키도 목록에 포함(중복 방지)
          if [ -n "$DOTENV_PRIVATE_KEY_PRIVATE" ]; then
            grep -qxF DOTENV_PRIVATE_KEY_PRIVATE .env.masklist || echo DOTENV_PRIVATE_KEY_PRIVATE >> .env.masklist
          fi

          # 2) dotenvx 컨텍스트에서 해당 키들만 값을 읽어 마스킹 + GITHUB_ENV 등록
          dotenvx run -f .env.private -f .env.public -- bash -lc '
            while IFS= read -r key; do
              v="${!key}"
              [ -z "$v" ] && continue
              echo "::add-mask::$v"
              if printf "%s" "$v" | grep -q $'\''\n'\''; then
                echo "$key<<EOF" >> "$GITHUB_ENV"
                printf "%s\n" "$v" >> "$GITHUB_ENV"
                echo "EOF" >> "$GITHUB_ENV"
              else
                printf "%s=%s\n" "$key" "$v" >> "$GITHUB_ENV"
              fi
            done < .env.masklist
          '
          rm -f .env.masklist || true
        env:
          DOTENV_PRIVATE_KEY_PRIVATE: ${{ secrets.DOTENV_PRIVATE_KEY_PRIVATE }}

      - name: Cache turbo build setup
        if: ${{ !(github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'dependabot')) }}
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      # pnpm 설치 (packageManager 버전과 일치)
      - name: Setup pnpm
        if: ${{ !(github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'dependabot')) }}
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      # Node.js 환경 설정 (package.json의 engines.node 버전과 일치)
      - name: Setup Node.js
        if: ${{ !(github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'dependabot')) }}
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm

      # 의존성 설치 최적화
      - name: Install dependencies
        if: ${{ !(github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'dependabot')) }}
        run: pnpm install --prefer-offline

      - name: Deploy Env Vars
        if: ${{ !(github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'dependabot')) }}
        run: pnpm run deploy:env-vars

      - name: Deploy
        if: ${{ !(github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'dependabot')) }}
        run: pnpm run deploy

      - name: Create Sentry release
        if: ${{ !(github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'dependabot')) }}
        uses: getsentry/action-release@v3
        with:
          environment: deployed
