name: Build and Tests

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

# explicitly configure permissions, in case your GITHUB_TOKEN workflow permissions are set to read-only in repository settings
permissions:
  pull-requests: write # Necessary to comment on PRs
  issues: read # Necessary to read issue comments
  contents: read # Necessary to access the repo content

jobs:
  build:
    name: Build and Tests
    timeout-minutes: 15
    runs-on: ubuntu-latest
    # To use Remote Caching, uncomment the next lines and follow the steps below.
    # env:
    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    #  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 23.5.0

      - name: Install dependencies
        run: npm install -g pnpm && pnpm install

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: Test
        run: pnpm test

      # 먼저 리포트들을 하나의 디렉토리로 복사
      - name: Collect playwright reports
        run: |
          mkdir -p playwright-reports
          cp -r apps/*/playwright-report/* playwright-reports/ || true
          cp -r packages/*/playwright-report/* playwright-reports/ || true
          cp -r */*/playwright-report/* playwright-reports/ || true
          ls -la playwright-reports

      # 모든 리포트를 한 번에 업로드
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-all-reports
          path: playwright-reports/
          retention-days: 30

      # Storybook 리포트는 별도로 업로드
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-storybook-reports
          path: storybook/playwright-report/
          retention-days: 30
