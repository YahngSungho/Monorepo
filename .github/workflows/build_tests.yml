name: Build & Tests

on:
  pull_request_target:
    types:
      - labeled
      - synchronize

# explicitly configure permissions, in case your GITHUB_TOKEN workflow permissions are set to read-only in repository settings
permissions:
  pull-requests: write # Necessary to comment on PRs
  issues: read # Necessary to read issue commentsds
  contents: read # Necessary to access the repo content
  actions: read
  checks: write

jobs:
  build:
    name: Build & Tests
    timeout-minutes: 15
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    if: github.event.action == 'labeled' && github.event.label.name == 'mutation-finished'

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2
          token: ${{ secrets.TOKEN1 }}

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Cache Playwright Page State
        uses: actions/cache@v4
        id: playwright-page-cache
        with:
          path: storybook/.cache
          key: ${{ runner.os }}-playwright-page-cache-${{ hashFiles('storybook/e2e/**') }}
          restore-keys: |
            ${{ runner.os }}-playwright-page-cache-

      # pnpm 설치 (packageManager 버전과 일치)
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm

      # 최적화된 설치 명령
      - name: Install dependencies
        run: pnpm install --prefer-offline

      - name: Install Playwright Browsers
        run: pnpm run playwright-install-env

      - name: Test
        run: pnpm run test

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        continue-on-error: true
        with:
          name: Vitest Report # Name of the check run which will be created
          path: '**/vitest-report/**' # Path to test results
          reporter: jest-junit # Format of test results

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        continue-on-error: true
        with:
          name: Playwright Report # Name of the check run which will be created
          path: '**/playwright-report/**' # Path to test results
          reporter: jest-junit # Format of test results

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        continue-on-error: true
        with:
          name: Playwright Results # Name of the check run which will be created
          path: '**/test-results/**' # Path to test results
          reporter: jest-junit # Format of test results

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-reports
          path: '**/playwright-report/'
          retention-days: 30
