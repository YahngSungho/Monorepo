name: Sentry

on:
  pull_request_target:
    types:
      - labeled

# explicitly configure permissions, in case your GITHUB_TOKEN workflow permissions are set to read-only in repository settings
permissions:
  pull-requests: write # Necessary to comment on PRs
  issues: read # Necessary to read issue commentsds
  contents: read # Necessary to access the repo content

jobs:
  build:
    name: Sentry
    runs-on: ubuntu-latest
    if: github.event.action == 'labeled' && github.event.label.name == 'mutation-finished'

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Install dotenvx
        run: curl -sfS https://dotenvx.sh/install.sh | sh

      - name: Load and mask only .env keys into job env
        shell: bash
        run: |
          # 1) .env 파일들에서 "키 이름"만 추출(주석/공백 라인 무시)
          awk -F= '!/^#/ && NF { gsub(/^[ \t]+|[ \t]+$/,"",$1); print $1 }' .env.public .env.private \
            | sort -u > .env.keys

          # 2) dotenvx 컨텍스트에서 해당 키들만 값을 읽어 마스킹 + GITHUB_ENV 등록
          dotenvx run -f .env.private -f .env.public -- bash -lc '
            while IFS= read -r key; do
              v="${!key}"
              [ -z "$v" ] && continue
              echo "::add-mask::$v"
              if printf "%s" "$v" | grep -q $'\''\n'\''; then
                echo "$key<<EOF" >> "$GITHUB_ENV"
                printf "%s\n" "$v" >> "$GITHUB_ENV"
                echo "EOF" >> "$GITHUB_ENV"
              else
                printf "%s=%s\n" "$key" "$v" >> "$GITHUB_ENV"
              fi
            done < .env.keys
          '
        env:
          DOTENV_PRIVATE_KEY_PRIVATE: ${{ secrets.DOTENV_PRIVATE_KEY_PRIVATE }}

      - name: Create Sentry release
        uses: getsentry/action-release@v3
        with:
          environment: production
