name: Mutate Code

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  pull-requests: write # Necessary to comment on PRs
  issues: read # Necessary to read issue comments
  contents: write

jobs:
  # 공통 경로 필터링 job
  path-filter:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.filter.outputs.images }}
    if: "!contains(github.event.pull_request.labels.*.name, 'mutation-completed')"
    steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            images:
              - '**.jpg'
              - '**.jpeg'
              - '**.png'
              - '**.webp'

  compress-images:
    runs-on: ubuntu-latest
    needs: path-filter
    if: needs.path-filter.outputs.images == 'true'
    steps:
      - name: Compress Images
        uses: calibreapp/image-actions@main

  lint-format:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    if: "!contains(github.event.pull_request.labels.*.name, 'mutation-completed')"
    outputs:
      is_automated: ${{ steps.check_commit.outputs.is_automated }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.TOKEN1 }}

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      # pnpm 설치 (packageManager 버전과 일치)
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.4.1
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23.5.0
          cache: pnpm

      # 의존성 설치 최적화
      - name: Install dependencies
        run: pnpm install --prefer-offline

      # 이전 커밋 메시지 확인
      - name: Check Last Commit Message
        id: check_commit
        run: |
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$LAST_COMMIT_MSG" == *"[automated-mutation]"* ]]; then
            echo "is_automated=true" >> $GITHUB_OUTPUT
          else
            echo "is_automated=false" >> $GITHUB_OUTPUT
          fi

      # 린트 실행
      - name: Run Lint & Format
        if: steps.check_commit.outputs.is_automated != 'true'
        run: pnpm run lint-fix

  push-and-labeled:
    needs: [compress-images, lint-format]
    runs-on: ubuntu-latest
    if: "always() && !contains(github.event.pull_request.labels.*.name, 'mutation-completed')"

    steps:
      # 커밋 시도
      - name: Commit Changes
        id: auto-commit
        if: ${{ needs.lint-format.outputs.is_automated != 'true' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: '[automated-mutation]'

      - name: Add a Label to PR 1
        if: steps.auto-commit.outputs.changes_detected == 'true' && steps.check_commit.outputs.is_automated != 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN1 }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['mutated']
            })

      # 먼저 라벨 추가
      - name: Add a Label to PR 2
        if: steps.check_commit.outputs.is_automated != 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN1 }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['mutation-completed']
            })
