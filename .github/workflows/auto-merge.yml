name: Auto Merge
on:
  pull_request_target:
    types:
      - labeled
jobs:
  automerge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: |
      !contains(github.event.pull_request.labels.*.name, 'dependabot') &&
      github.event.action == 'labeled' && github.event.label.name == 'mutation-finished'
    steps:
      - uses: reitermarkus/automerge@v2
        with:
          token: ${{ secrets.TOKEN1 }}
          required-labels: mutation-finished
          do-not-merge-labels: never-merge
  automerge-dependabot:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: |
      contains(github.event.pull_request.labels.*.name, 'dependabot') &&
      github.event.action == 'labeled' && github.event.label.name == 'mutation-finished'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@d7267f607e9d3fb96fc2fbe83e0af444713e90b7
        with:
          github-token: '${{ secrets.TOKEN1 }}'
      - name: Enable auto-merge for Dependabot PRs
        if: steps.metadata.outputs.update-type != 'version-update:semver-major'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.TOKEN1}}
  remove-mutation-finished-label:
    needs: [automerge, automerge-dependabot]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: always() && contains(github.event.pull_request.labels.*.name, 'mutation-finished')
    steps:
      - name: Remove mutation-finished Label
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN1 }}
          script: |
            try {
              await new Promise((resolve, reject) => {
                setTimeout(() => {
                  resolve();
                }, 1000);
              });
              await github.rest.issues.removeLabel({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'mutation-finished'
              });
              core.info('Label "mutation-finished" removed successfully.');
            } catch (error) {
              if (error.status === 404) {
                core.info('Label "mutation-finished" not found or already removed.');
              } else {
                core.setFailed(`Error removing label: ${error.message}`);
              }
            }
